

* 상속을 하는 이유

  마라토너 패키지가 있다고 가정
  선수A 뛰다()
  선수B 뛰다()
  선수C 뛰다()

  상속을 이용해서 뛰다를 ***공통으로 처리

  운동기능{
     뛰다()
  }

  선수A extends 기능{
     뛰다()   //  부모클래스에 있는 메소드임
  }
  상속을 하면 부모클래스 메소드를 사용 할 수 있다


-------------------------------------------------------------------------------


* 상속 한계
  ***자바, 자바스크립트는 다중상속이 불가능
  자바, 자바스크립트에서 ***인터페이스를 제공 해 줌
  인터페이스로 다중상속을 받은것처럼 사용이 가능함
  extends 대신 인터페이스를 사용

 
-------------------------------------------------------------------------------


* 프로젝트가 커지면 커질수록 ***다중상속을 많이 사용 함


-------------------------------------------------------------------------------


* 추상화
  추상 = 공통 기능
  1. 개념 - 공통적으로 사용 하는 기능을 따로 정의
  2. 추상클래스, 추상메소드
     abstract 키워드로 선언 된 클래스
     추상클래스에는 '일반메소드와 추상메소드'로 정의 할 수 있다
     추상메소드의 목적은 정의만 해 놓고 자식클래스에서 오버라이딩 하는 것
     추상클래스는 new로 호출(인스턴스화) 할 수 없다 - 오버라이딩을 하면 가능해짐
     ***추상메소드가 있는 추상클래스를 상속 받으면, 무조건 오버라이딩을 해야 함


* 추상클래스의 한계
  클래스라서 다중상속 X
  그래서 인터페이스가 나옴


* 인터페이스
  데이터(공통기능)를 제공 하는 규격(주체)
  다중상속을 제공
  인터페이스를 상속 받으면 무조건 오버라이딩을 해야 됨
  인터페이스 안에 있는 모든 메소드는 추상메소드다 - 추상메소드는 public으로 사용 해야 됨

  A 프로젝트 : 과장1 - 테이블 설계, 인터페이스 설계, 클라이언트 요구사항 정리, 코드 구현(핵심 로직)
              대리1 - 소스 통합 & 배포
              사원2 - 코드 구현


* 인터페이스와 클래스의 차이
  인터페이스는 오버라이딩이 필수
  클래스는 오버라이딩이 필수가 아님 


-------------------------------------------------------------------------------


* 약한 결합, 강한 결합
  1. 약한 결합 ( Loose Coupling ) : 
  2. 강한 결합 ( Tight Coupling ) : 


-------------------------------------------------------------------------------


* 누가 어떤 메소드를 만들었는지 추적 해야 됨
  기록 남기는 방법 : 위쪽 메뉴중에서 '윈도우' -> Preferences -> 왼쪽 메뉴에서 'JAVA' 
                        -> JAVA 하위메뉴에서 'Code Style' -> Code Style 하위메뉴에서 'Code Templates' 
                        -> 가운데 메뉴에서 'Comments' -> 하위메뉴에서 'Methods' 선택 -> 아래에 적힌 그대로 수정
				     /**
				      * ${tags}
				      * @date : ${date}
				      * @author : Junho Hong
				      */
                    가운데 메뉴에서 'Comments' -> 하위메뉴에서 'Types' 선택 -> 아래에 적힌 그대로 수정
				     /**
				      * @author Junho Hong
				      * @date ${date}
				      * @comment : 
				      */
                    'Apply and Close' 클릭
  단축키 : Alt + Shift + j

