
* 자바 (객체지향언어)

1. if/else, for, while, 배열 (공통)
2. 메소드, 클래스 (객체지향언어 특징)
3. 제네릭 컬렉션 (자바 특징)


----------------------------------------------------------------


* 문자 비교
  'String =='은 비교하고자 하는 두개의 대상의 주소(위치)값을 비교함.  =  Call by Reference
  'equals'는 비교하고자 하는 두개의 대상의 값 자체를 비교함.  =  Call by Value


----------------------------------------------------------------


* 배열

  int num = 10;
  int num1 = 10;
  int num2 = 10;
  int num3 = 10;
  int num4 = 10;

  이런것들을 방지하기 위해서 나온것이 배열


	int array[] = {2,4,6,9};
	System.out.println(array[2]);   // 첫번째 배열(인덱스) 호출
	System.out.println(array.length);   // 배열 길이 호출
	System.out.println(array[4]);   // 에러


----------------------------------------------------------------


* 배열과 반복문은 자주 같이 사용 함


----------------------------------------------------------------


* 배열을 사용해서 모든 값을 다 열어볼 수 있음

	for(int i=0; i<array.length; i++)
	{
		System.out.println("배열에 있는 인덱스 값은 : "+array[i]);
	}


----------------------------------------------------------------


* 배열 길이만큼 홀수 판단

	for(int i=0; i<array.length; i++)
	{
		if((array[i]%2)!=0)
		{
			System.out.println("배열에 있는 인덱스 값은 : "+array[i]);				
		}
	}


----------------------------------------------------------------


* 배열 인덱스 값의 총 합

	int sum=0;
	for(int i=0; i<=array.length; i++)
	{
		sum += array[i];				
	}
	System.out.println(sum);


----------------------------------------------------------------


	array[0] = 10;    / 배열 0번째 인덱스 값을 10으로 대입


----------------------------------------------------------------


* for each문 ( 향상된 for문 ) - 'i'가 'array'만큼 알아서 증가함.

	for(int i : array)
	{
		System.out.print(i+" ");
	}

			// 위랑 아래에 적힌것이 같음

	for(int i=0; i<array.length; i++)
	{
		int x = array[i];
		System.out.println(x);


----------------------------------------------------------------





----------------------------------------------------------------





----------------------------------------------------------------





----------------------------------------------------------------





----------------------------------------------------------------





----------------------------------------------------------------

