* 변수

  1) 프로그램을 만들기 위해 코딩을 함
  2) 프로그램 데이터가 있으니까 변수라는 개념을 이용해서 데이터를 대입해야 함.
  3) int(데이터 타입), x(변수 이름), =(대입)
     int x= 정수형 데이터;
  4) 변수를 많이 선언할수록 자바메모리 안에 데이터가 쌓여서, 변수 재활용을 해야 됨.



-------------------------------------------------------------------------------------------------

	// 사칙연산 : *, /, %, +, -
		
	레벨 += 레벨;  //  '레벨 = 레벨 + 레벨;' 이라는 뜻
				 //  '레벨 *= 레벨;' 은 '레벨 = 레벨 * 레벨;'이라는 뜻
				 //  '레벨 /= 레벨;' 은 '레벨 = 레벨 / 레벨;'이라는 뜻
				 //  '레벨 -= 레벨;' 은 '레벨 = 레벨 - 레벨;'이라는 뜻
		
	++레벨;  // "증감연산자"  1이 올라감.
		
	// 비교연산자 ==


-------------------------------------------------------------------------------------------------


	int x=10;
	int y=10;
	int num=0;
		
	if (x != y)
	{
		num = x+y;
	}
		// if 안의 조건식이 달라서 if 실행이 안됨. 그래서 num 값은 0
		
		


		
	int x=10;
	int y=10;
	int num=0;
		
	if (x == y)
	{
		num = x+y;
	}
	num = 0;
		// if가 실행 됐어도 마지막에 num 값을 다시 정의했기 때문에 num 값은 0



-------------------------------------------------------------------------------------------------


	// C학점이 나오게
	int MyScore = 77;

	if (MyScore >= 90)
	{
		System.out.println("A학점입니다.");
	}
	if (MyScore < 90 && MyScore >= 80)
	{
		System.out.println("B학점입니다.");
	}
	if (MyScore < 80 && MyScore >= 70)
	{
		System.out.println("C학점입니다.");
	}
	if (MyScore < 70 && MyScore >= 60)
	{
		System.out.println("D학점입니다.");
	}




-------------------------------------------------------------------------------------------------



	int value = 100;
	// 짝수인지 홀수인지 구별하는 프로그램 구현
	// 조건1. if, else로 풀것
		
	if((value%2) == 0)
	{
		System.out.println("짝수입니다.");
	}
	if((value%2) != 0)
	{
		System.out.println("홀수입니다.");
	}


-------------------------------------------------------------------------------------------------


* 스캐너

Scanner scan = new Scanner(System.in);  //  Ctrl + Shift + o


-------------------------------------------------------------------------------------------------


	Scanner scan = new Scanner(System.in);  //  Ctrl + Shift + o
		
	System.out.println("이름을 입력하세요 ==>");
	String name = scan.next();  // 문자를 입력할 때
	System.out.println("좋아하는 숫자를 입력하세요 ==>");
	int num = scan.nextInt();  // 숫자를 입력할 때
		
	System.out.println("안녕하세요. 제 이름은 "+name+"입니다.");
	System.out.println("제가 좋아하는 숫자는 "+num+"입니다.");


-------------------------------------------------------------------------------------------------


	Scanner scan = new Scanner(System.in);
		
	System.out.println("숫자를 입력하세요 ==>");
	int value = scan.nextInt();
	if((value%2)==0)
	{
		System.out.println("짝수입니다.");
	}
	else
		System.out.println("홀수입니다.");


-------------------------------------------------------------------------------------------------


	Scanner scan = new Scanner(System.in);
		
	System.out.println("숫자를 입력하세요 ==>");
	int value = scan.nextInt();
	// 1. 1~100 사이의 숫자를 입력
	// 2. 100이 넘어가면 100이 넘었습니다. 출력
	// 3. 1~100 안에 있는 숫자만 2의 배수인지 3의 배수인지 출력
	// 4. if와 else를 사용. 사칙연산 사용. 변수 선언 금지
		
	if(value <= 100)
	{
		if((value%2) == 0)
		{
			System.out.println("2의 배수입니다.");
		}
		if((value%3) == 0)
		{
			System.out.println("3의 배수입니다.");
		}
	}
	else
	{
		System.out.println("100이 넘었습니다.");
	}



-------------------------------------------------------------------------------------------------


	int num = 30;
		
	if( num == 20 )
	{
		System.out.println("Hello");
	}
	else if( num == 30 )
	// if 다음에 else를 쓰면, 'if' 한개에 대한 else가 적용 되지만
	// if 다음에 else if를 쓰고 else까지 쓰면, 'if와 else if' 두개에 대한 else가 적용 됨
			
	{
		System.out.println("Hello World");
	}


-------------------------------------------------------------------------------------------------


*** 반복문 : 코드의 중복을 제거하기 위해 사용

	for(int i=1; i<=10; ++i)
	{
		System.out.println("Hello World");
	}

	// int i=1  ( 초기문 or 선언문 )
	// i<=10   ( 조건식 )
	// ++i      ( 반복 작업식 )



	for(int i=0; i<10; ++i)
	{
		System.out.println("i = "+i);
	}


-------------------------------------------------------------------------------------------------


	// 1~10까지의 짝수를 판별
	// for문 사용
		
	for(int i=1; i<=10; ++i)
	{
		if((i%2) == 0)
		System.out.println("짝수는 ==> "+i);
	}


-------------------------------------------------------------------------------------------------





-------------------------------------------------------------------------------------------------





-------------------------------------------------------------------------------------------------
