
limit - 출력되는 결과 행의 수를 제한 ( 적는 순서는 맨 뒤 )

select
	*
from emp
limit 0, 10


-----------------------------------------------


* join : 두개 이상의 테이블을 조회할 때


-----------------------------------------------


* 조인하는 방법 2가지 ( 2번 방법이 좋음 ) - inner join

1.
select
	*
from emp as e, dept as d
where e.deptno = d.deptno


2.
select
	*
from emp as e
inner join dept as d
on e.deptno = d.deptno
inner join dw as dw
on
.
.
.
where


-----------------------------------------------


조인 종류

inner join ( 내부 조인 혹인 조인 ) - 두 테이블을 조회할 때, 두 테이블에 모두 지정한 데이터 조회
outer join ( 외부 조인 ) - 두 테이블을 조회할 때, 1개의 테이블에만 데이터가 있어도 조회
self join ( 자체 조인 ) - 자신이 자신과 조인. 1개의 테이블을 사용


-----------------------------------------------


외부 조인 종류

left outer join - 왼쪽 테이블의 모든 값이 출력되는 조인
right outer join - 오른쪽 테이블의 모든 값이 출력되는 조인
full outer join - 왼쪽 또는 오른쪽 테이블의 모든 값이 출력되는 조인


-----------------------------------------------


외부 조인 문법
select
	<컬럼 목록>
from <첫번째 테이블 이름>
left outer join <두번째 테이블 이름>
on <조인 조건>
where
.
.
.


-----------------------------------------------


외부 조인을 사용하는 시기
ex - 쇼핑몰 사이트에서 회원가입은 했는데 구매이력이 없는 회원을 조회할 때


사원테이블에서 emp 테이블에서만 null 값 찾기
select
	*
from emp as e
right join dept as d
on e.deptno = d.deptno
where e.deptno is null


-----------------------------------------------


select
	*
from emp as e left join dept as d
on e.deptno = d.deptno


-----------------------------------------------


헷갈릴때
1. inner join 코딩
2. 내가 찾고자 하는 테이블 위치를 확인
3. left or right를 사용할지 확인


-----------------------------------------------


* self 조인
별도의 문법이 있는것은 아님.
inner join과 문법 동일.
즉, 동일 테이블을 두번 조인 ( inner join으로 )


ex - 사원들의 사수 이름과 번호 조회 ( mgr - 사수번호 )
select
	sawon.empno as "사원 번호",
	sawon.ename as "사원 이름",
	boss.empno as "사수 번호",
	boss.ename as "사수 이름"
from emp as sawon
inner join emp as boss
on sawon.mgr = boss.empno


-----------------------------------------------


select
	sawon.empno as "사원 번호",
	sawon.ename as "사원 이름",
	boss.empno as "사수 번호",
	boss.ename as "사수 이름"
from emp as boss
inner join emp as sawon
on boss.empno = sawon.empno


-----------------------------------------------


다중 조인

select
	<컬럼 목록>
from <테이블 별칭 A>
<inner or right or left> join < 테이블 별칭 b>
on <조인 조건>
<inner or right or left> join < 테이블 별칭 c>
on <조인 조건>
[where, group by, having, order by, ... ]


select
	*
from emp as e
inner join dept as d
on e.deptno = d.deptno
inner join emp as boss
on e.mgr = boss.empno


-----------------------------------------------


서브 쿼리 - 정말 어쩔 수 없을 때 사용

select
	avg(sal) as



-----------------------------------------------



1. 반드시 () 괄호로 묶음
select
	(select ...)
from A table

2. 서브쿼리가 먼저 실행된 후 외부쿼리와 비교 및 연산

3. 서브쿼리가 가능한 곳
  1) select 절 ( 스칼라 서브쿼리 )
  2) ** from 절 ( 인라인 뷰 )
  3) where 절 ( 중첩 서브쿼리 )
  4) having
  5) order by
  6) insert values
  7) update set

4. 서브쿼리 종류
  1) 단일 서브쿼리 : 
  2) 다중행 서브쿼리 : 
  3) delete : 
  4) 모델링 ( table을 create 하는 작업 ) - PK와 FK 작업을 여기서 함 : 

-----------------------------------------------


10번 부서 사람들 중에서
회사의 평균 급여보다 많이 받는 사람 조회
  hint - where 서브쿼리


select 
	*
from emp
where
	deptno = 10
	and
	sal >= (select avg(sal) from emp)



-----------------------------------------------


사원번호가 7876인 사원과 잡이 같은 사람을 모두 조회
  hint - where 서브쿼리


select 
	*
from emp
where
	job = (
	select job from emp
	where empno=7876)




-----------------------------------------------




