1. JOB이 'MANAGER'인 직원 조회.

select
	*
from emp
where job = 'MANAGER'



--------------------------------------------------------------------------------------------------

2. JOB이 'MANAGER' 직원들의 sal(급여) avg(평균)을 조회하시오.

select
	avg(sal) as '급여 평균'
from emp
where job = 'MANAGER'



--------------------------------------------------------------------------------------------------

3. COMM(보너스)이 NULL이 아니고 JOB(직업)이 'SALESMAN' 직원 전체 조회.

select
	*
from emp
where
	comm is not null
	and
	job = 'SALESMAN'



--------------------------------------------------------------------------------------------------

4. deptno(부서번호)가 20번이고 sal(급여)이 2000초과인 직원 전체 조회.

select
	*
from emp
where
	deptno = 20
	and
	sal > 2000



--------------------------------------------------------------------------------------------------

5. empno(사원번호)가 7369인 ename(직원 이름)을 'BRIAN' 으로 수정.

update emp
set
	ename = 'BRIAN'
where empno = 7369



--------------------------------------------------------------------------------------------------

6. dname(부서명)이 'RESEARCH'인 직원의 ename(이름), sal(급여), loc(근무 지역) 조회.

select
	e.ename as '이름',
	e.sal as '급여',
	d.loc as '근무 지역'
from emp as e
inner join dept as d
on e.deptno = d.deptno
where d.dname = 'RESEARCH'



--------------------------------------------------------------------------------------------------

7. loc(부서 근무지)이 'NEW YORK'이고, job(직책)이 'MANAGER'인 
   직원의 ename(이름), sal(급여) 조회.

select
	e.ename as '이름',
	e.sal as '급여'
from emp as e
inner join dept as d
on e.deptno = d.deptno
where
	d.loc = 'NEW YORK'
	and
	e.job = 'MANAGER'



--------------------------------------------------------------------------------------------------

8. 상사보다 먼저 입사한 직원의 직원 이름, 직원 입사일, 상사 이름, 상사 입사일을 조회.

select
	sawon.ename as '직원 이름',
	sawon.hiredate as '직원 입사일',
	boss.ename as '상사 이름',
	boss.hiredate as '상사 입사일'
from emp as sawon
inner join emp as boss
on sawon.mgr = boss.empno
where sawon.hiredate < boss.hiredate



--------------------------------------------------------------------------------------------------

9. deptno(부서번호)별로 deptno(부서번호)와 sal(급여)합계 조회
 단, 10, 30번 deptno(부서번호)와 sal(급여)
 sum(합계)가 5000이상인 직원만 조회.

select
	deptno as '부서 번호',
	sum(sal) as '급여 합계'
from emp
where
	deptno = 10
	or
	deptno = 30
group by deptno
having sum(sal) >= 5000



--------------------------------------------------------------------------------------------------

10. loc(부서 위치)이 'CHICAGO'이고 사수 sal(급여)가 5000 미만인 
 사원 번호, 사원 이름, 사원 dname(부서명), 사수 번호, 사수 이름, 사수 급여를 조회
 단, 사원의 hiredate(입사날짜)로 asc(오름차순).

select
	boss.empno as '사원 번호',
	sawon.ename as '사원 이름',
	d.dname as '사원 부서명',
	sawon.mgr as '사수 번호',
	boss.ename as '사수 이름',
	boss.sal as '사수 급여'
from emp as sawon
inner join dept as d
on sawon.deptno = d.deptno
inner join emp as boss
on sawon.mgr = boss.empno
where
	d.loc = 'CHICAGO'
	and
	boss.sal < 5000
order by sawon.hiredate asc



--------------------------------------------------------------------------------------------------

11. job(직책)별로 sal(급여)합계와 sal(급여)평균를 조회 단,
 job이 'MANAGER'는 제외하고 sal(급여) 평균이 1000이상인 것만 조회.

select
	sum(sal) as '급여 합계',
	avg(sal) as '급여 평균'
from emp
where
	job != 'MANAGER'
group by job
having avg(sal) >= 1000


--------------------------------------------------------------------------------------------------

12. SQL 실행 순서 작성하시오.
   a. (where) b. (from) c. (having) d. (order by) e. (group by) f. (select)

   ex) a -> d -> f -> b
   정답 => b -> a -> e -> c -> d -> f

